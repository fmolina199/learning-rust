use ndarray::array;

fn main() {
	let a = array![[1.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
	               [0.500, 0.500, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
	               [0.250, 0.500, 0.250, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
	               [0.125, 0.375, 0.375, 0.125, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000],
	               [0.000, 0.000, 0.000, 0.000, 1.000, 0.000, 0.000, 0.000, 0.000, 0.000],
	               [0.000, 0.000, 0.000, 0.000, 0.500, 0.500, 0.000, 0.000, 0.000, 0.000],
	               [0.000, 0.000, 0.000, 0.000, 0.250, 0.500, 0.250, 0.000, 0.000, 0.000],
	               [0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 1.000, 0.000, 0.000],
	               [0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.500, 0.500, 0.000],
	               [0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 1.000]];

	let b = vec![array![00.0, 00.0, 00.0],
	             array![00.0, 05.0, 00.0],
	             array![00.0, 10.0, 00.0],
	             array![00.0, 15.0, 00.0],
	             array![05.0, 00.0, 00.0],
	             array![07.5, 07.5, 00.0],
	             array![05.0, 10.0, 00.0],
	             array![10.0, 00.0, 00.0],
	             array![10.0, 05.0, 00.0],
	             array![15.0, 00.0, 00.0]];

	let c = array![[0.0, 0.0, 1.0],
	               [0.0, 0.2, 0.8],
	               [0.0, 0.4, 0.6],
	               [0.0, 0.6, 0.4],
	               [0.0, 0.8, 0.2],
	               [0.0, 1.0, 0.0],

	               [0.2, 0.0, 0.8],
	               [0.2, 0.2, 0.6],
	               [0.2, 0.4, 0.4],
	               [0.2, 0.6, 0.2],
	               [0.2, 0.8, 0.0],

	               [0.4, 0.0, 0.6],
	               [0.4, 0.2, 0.4],
	               [0.4, 0.4, 0.2],
	               [0.4, 0.6, 0.0],

	               [0.6, 0.0, 0.4],
	               [0.6, 0.2, 0.2],
	               [0.6, 0.4, 0.0],

	               [0.8, 0.0, 0.2],
	               [0.8, 0.2, 0.0],

	               [1.0, 0.0, 0.0]];


	for i in 0..21 {
		let s_1 = c[[i, 0]];
		let s_2 = s_1 * s_1;
		let s_3 = s_2 * s_1;

		let t_1 = c[[i, 1]];
		let t_2 = t_1 * t_1;
		let t_3 = t_2 * t_1;

		let u_1 = c[[i, 2]];
		let u_2 = u_1 * u_1;
		let u_3 = u_2 * u_1;

		let p = b[3].clone() * t_3
		      + b[2].clone() * 3.0 * s_1 * t_2
		      + b[6].clone() * 3.0 * t_2 * u_1
		      + b[1].clone() * 3.0 * s_2 * t_1
		      + b[5].clone() * 6.0 * s_1 * t_1 * u_1
		      + b[8].clone() * 3.0 * t_1 * u_2
		      + b[0].clone() * s_3 
		      + b[9].clone() * u_3
		      + b[4].clone() * 3.0 * s_2 * u_1
		      + b[7].clone() * 3.0 * s_1 * u_2;

		println!("{}", p);
	}
}
